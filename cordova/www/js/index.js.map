{"version":3,"sources":["index.js"],"names":["app","initialize","bindEvents","document","addEventListener","onDeviceReady","receivedEvent","id","parentElement","getElementById","listeningElement","querySelector","receivedElement","setAttribute","console","log"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,IAAIA,MAAM;AACN;AACAC,gBAAY,SAASA,UAAT,GAAsB;AAC9B,aAAKC,UAAL;AACH,KAJK;AAKN;AACA;AACA;AACA;AACAA,gBAAY,SAASA,UAAT,GAAsB;AAC9BC,iBAASC,gBAAT,CAA0B,aAA1B,EAAyC,KAAKC,aAA9C,EAA6D,KAA7D;AACH,KAXK;AAYN;AACA;AACA;AACA;AACAA,mBAAe,SAASA,aAAT,GAAyB;AACpCL,YAAIM,aAAJ,CAAkB,aAAlB;AACH,KAlBK;AAmBN;AACAA,mBAAe,SAASA,aAAT,CAAuBC,EAAvB,EAA2B;AACtC,YAAIC,gBAAgBL,SAASM,cAAT,CAAwBF,EAAxB,CAApB;AACA,YAAIG,mBAAmBF,cAAcG,aAAd,CAA4B,YAA5B,CAAvB;AACA,YAAIC,kBAAkBJ,cAAcG,aAAd,CAA4B,WAA5B,CAAtB;;AAEAD,yBAAiBG,YAAjB,CAA8B,OAA9B,EAAuC,eAAvC;AACAD,wBAAgBC,YAAhB,CAA6B,OAA7B,EAAsC,gBAAtC;;AAEAC,gBAAQC,GAAR,CAAY,qBAAqBR,EAAjC;AACH;AA7BK,CAAV;;AAgCAP,IAAIC,UAAJ;AACA","file":"index.js","sourcesContent":["'use strict';\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar app = {\n    // Application Constructor\n    initialize: function initialize() {\n        this.bindEvents();\n    },\n    // Bind Event Listeners\n    //\n    // Bind any events that are required on startup. Common events are:\n    // 'load', 'deviceready', 'offline', and 'online'.\n    bindEvents: function bindEvents() {\n        document.addEventListener('deviceready', this.onDeviceReady, false);\n    },\n    // deviceready Event Handler\n    //\n    // The scope of 'this' is the event. In order to call the 'receivedEvent'\n    // function, we must explicitly call 'app.receivedEvent(...);'\n    onDeviceReady: function onDeviceReady() {\n        app.receivedEvent('deviceready');\n    },\n    // Update DOM on a Received Event\n    receivedEvent: function receivedEvent(id) {\n        var parentElement = document.getElementById(id);\n        var listeningElement = parentElement.querySelector('.listening');\n        var receivedElement = parentElement.querySelector('.received');\n\n        listeningElement.setAttribute('style', 'display:none;');\n        receivedElement.setAttribute('style', 'display:block;');\n\n        console.log('Received Event: ' + id);\n    }\n};\n\napp.initialize();\n//# sourceMappingURL=index.js.map\n"]}